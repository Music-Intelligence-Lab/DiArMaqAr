// NoteNameMappings.ts

export const arabicToEnglishNoteMapping: Record<string, string> = {
  yegāh: "G",
  "qarār nīm ḥiṣār": "Ab-",
  "qarār ḥiṣār": "Ab",
  "qarār tīk ḥiṣār/shūrī": "Ab+",
  "nīm ʿushayrān": "A-",
  ʿushayrān: "A",
  "nīm ‘ajam ‘ushayrān": "Bb-",
  "‘ajam ‘ushayrān": "Bb",
  "tīk ʿajam ʿushayrān": "Bb+",
  ʿirāq: "B-b",
  "nīm kawasht/rahāwī": "B-",
  kawasht: "B",
  "tīk kawasht": "B+",
  rāst: "C",
  "tīk rāst": "C+",
  "nīm zirguleh": "C-#",
  zirguleh: "C#",
  "tīk zirguleh": "C#+",
  dogāh: "D",
  "nīm kurdī/nahāwand": "D+",
  kurdī: "Eb",
  "tīk kūrdī": "Eb+",
  segāh: "E-b",
  "nīm buselīk": "E-",
  "buselīk/’ushshāq": "E",
  "tīk buselīk": "E+",
  chahargāh: "F",
  "tīk chahargāh": "F+",
  "nīm ḥijāz": "F-#",
  ḥijāz: "F#",
  "tīk ḥijāz/ṣabā": "F#+",
  "nīm nawā": "g-",
  nawā: "g",
  "nīm ḥiṣār": "ab-",
  ḥiṣār: "ab",
  "tīk ḥiṣār": "ab+",
  "nīm ḥuseinī": "a-",
  ḥuseinī: "a",
  "nīm ‘ajam": "bb-",
  ʿajam: "bb",
  "tīk ʿajam": "bb+",
  awj: "b-b",
  "nīm māhūr": "b-",
  māhūr: "b",
  "tīk māhūr": "b+",
  kurdān: "c",
  "tīk kurdān": "c+",
  "nīm shahnāz": "c-#",
  shahnāz: "c#",
  "jawāb tīk zirguleh": "c#+",
  muḥayyar: "d",
  "nīm sunbuleh": "d+",
  "sunbuleh/zawāl": "eb",
  "jawāb tīk kūrdī": "eb+",
  buzurk: "e-b",
  "jawāb nīm buselīk": "e-",
  "jawāb buselīk": "e",
  "jawāb tīk buselīk": "e+",
  mahurān: "f",
  "tīk mahurān": "f+",
  "jawāb nīm ḥijāz": "f-#",
  "jawāb ḥijāz": "f#",
  "jawāb tīk ḥijāz": "f#+",
  "nīm saham/ramal tūtī": "g-",
  "saham/ramal tūtī": "g",
  "jawāb nīm ḥiṣār": "ab-",
  "jawāb ḥiṣār": "ab",
  "jawāb tīk ḥiṣār": "ab+",
  "jawāb ḥuseinī": "a",
  "jawāb nīm ‘ajam": "bb-",
  "jawāb ʿajam": "bb",
  "jawāb tīk ʿajam": "bb+",
  "jawāb awj": "b-b",
  "jawāb nīm māhūr": "b-",
  "jawāb māhūr": "b",
  "jawāb tīk māhūr": "b+",
  "jawāb kurdān": "c",
};

/** Returns the English name for a given Arabic note name (or "--" if not found). */
export function getEnglishNoteName(arabicName: string): string {
  return arabicToEnglishNoteMapping[arabicName] || "--";
}

// -----------------------
// Abjad arrays
// -----------------------
export const firstOctaveAbjadNames = [
  "آ",
  "ب",
  "ج",
  "د",
  "ه",
  "و",
  "ز",
  "ح",
  "ط",
  "ي",
  "ك",
  "ل",
  "م",
  "ن",
  "س",
  "ع",
  "ف",
  "ص",
  "ق",
  "ر",
  "ش",
  "ت",
  "ث",
  "خ",
  "ذ",
  "ض",
  "ظ",
  "غ",
  "يا",
  "يب",
  "يج",
  "يد",
  "يه",
  "يو",
  "يز",
  "يح",
  "يط",
  "كا",
  "كب",
  "كج",
  "كد",
  "كه",
  "كو",
  "كز",
  "كح",
  "كط",
];

export const secondOctaveAbjadNames = [
  "آ",
  "ب",
  "ج",
  "د",
  "ه",
  "و",
  "ز",
  "ح",
  "ط",
  "ي",
  "ك",
  "ل",
  "م",
  "ن",
  "س",
  "ع",
  "ف",
  "ص",
  "ق",
  "ر",
  "ش",
  "ت",
  "ث",
  "خ",
  "ذ",
  "ض",
  "ظ",
  "غ",
  "يا",
  "يب",
  "يج",
  "يد",
  "يه",
  "يو",
  "يز",
  "يح",
  "يط",
  "كا",
  "كب",
  "كج",
  "كد",
  "كه",
  "كو",
  "كز",
  "كح",
  "كط",
];

// Build a mapping from firstOctaveAbjadNames[i] -> secondOctaveAbjadNames[i]
export const firstToSecondAbjadMapping: Record<string, string> = {};
for (let i = 0; i < firstOctaveAbjadNames.length && i < secondOctaveAbjadNames.length; i++) {
  firstToSecondAbjadMapping[firstOctaveAbjadNames[i]] = secondOctaveAbjadNames[i];
}

// Build the reverse
export const secondToFirstAbjadMapping: Record<string, string> = {};
for (const [k, v] of Object.entries(firstToSecondAbjadMapping)) {
  secondToFirstAbjadMapping[v] = k;
}
