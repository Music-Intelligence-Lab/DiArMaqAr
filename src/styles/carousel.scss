@use "./variables" as *;
@use "./_buttons" as *;

// Unified carousel component for all managers (tuning systems, ajnas, maqamat)
// This provides consistent styling and behavior across all carousel instances

.carousel {
  display: flex;
  flex-direction: column;
  gap: $space-3;
  width: 100%;
  max-width: 1600px;
  margin: 0 auto;

  &__container {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
  }

  &__list {
    width: 100%;

    // Glassmorphism container with horizontal scrolling and multiple rows
    background: $surface-primary;
    backdrop-filter: $backdrop-blur;
    border: 1px solid $border-primary;
    border-radius: $space-3;

    display: grid;
    grid-template-rows: repeat(2, 1fr);
    grid-auto-flow: column;
    grid-auto-columns: 280px;
    gap: $space-3;
    height: 200px;
    overflow-x: auto;
    overflow-y: hidden;
    position: relative;
    padding: $space-4;
    scroll-behavior: smooth;

    // RTL support
    [dir="rtl"] & {
      direction: rtl;
    }

    &::-webkit-scrollbar {
      height: 2px;
    }

    &::-webkit-scrollbar-thumb {
      background: $light-grey;
      border-radius: $space-1;
    }

    &::-webkit-scrollbar-track {
      background: transparent;
    }
  }

  &__item {
    @include nav-item-base;
    @include nav-item-lg;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    height: 80px;
    justify-content: flex-start;
    text-align: left;

    // Default selectable state - muted glass background with subtle borders
    background: rgba($surface-primary, 0.9);
    border: 1px solid rgba($border-primary, 0.6);
    color: $text-primary;
    backdrop-filter: blur(8px);
    cursor: pointer;
    transition: all 0.15s ease;

    // RTL support
    [dir="rtl"] & {
      text-align: right;
    }

    // Simple hover state for default selectable items
    &:hover:not(&--disabled):not(&--active):not(&--selected) {
      border-color: $primary;
      color: $text-primary;
    }

    // Non-selectable/disabled state - greyed out like navbar items
    &--disabled {
      background: rgba($surface-secondary, 0.2) !important;
      border: 1px solid rgba($border-secondary, 0.15) !important;
      color: $text-disabled !important;
      opacity: 0.4;
      cursor: not-allowed;
      pointer-events: none;
    }

    // Active state - neon cyan look for active selectable items
    &--active {
      background: rgba($tertiary, 0.15);
      border: 1px solid $tertiary;
      color: $text-secondary;
      font-weight: $font-weight-medium;

      &:hover {
        background: $gradient-secondary;
        color: $text-secondary;
        border-color: $tertiary;
      }
    }

    // Selected state - gradient for chosen items
    &--selected {
      background: $gradient-secondary !important;
      border: 1px solid $tertiary !important;
      color: $text-primary !important;
      font-weight: $font-weight-semibold !important;

      &:hover {
        background: $gradient-secondary-light !important;
      }
    }
  }

  &__item-name {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    font-weight: $font-weight-light;
    font-size: $font-size-base;
    width: 100%;

    // RTL support
    [dir="rtl"] & {
      text-align: right;
    }

    &-title {
      color: $text-secondary;
      font-size: $font-size-xs;
      margin-top: $space-1;
      font-weight: $font-weight-normal;

      // RTL support
      [dir="rtl"] & {
        text-align: right;
      }
    }

    &-transpositions {
      color: $text-secondary;
      font-size: $font-size-xs;
      margin-top: $space-1;
      font-weight: $font-weight-normal;

      // RTL support
      [dir="rtl"] & {
        text-align: right;
      }
    }
  }

  &__controls {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
  }

  &__button {
    background: $glass-dark;
    border: 1px solid $border-primary;
    border-radius: $space-2;
    font-size: $font-size-lg;
    cursor: pointer;
    color: $text-primary;
    padding: $space-2;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    &:hover {
      background: $gradient-primary;
      border-color: transparent;
      color: $text-primary;
      // removed box-shadow for unified styling
    }

    &--prev,
    &--next {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 2;
      height: 40px;
      width: 20px;
      display: flex;
      align-items: center;
      justify-content: center;

      &:hover,
      &:focus,
      &:active {
        transform: translateY(-50%); // Keep centered position on all interactions
      }
    }

    &--prev {
      left: -10px;

      // RTL support
      [dir="rtl"] & {
        left: auto;
        right: -10px;
      }
    }

    &--next {
      right: -10px;

      // RTL support
      [dir="rtl"] & {
        right: auto;
        left: -10px;
      }
    }
  }

  // Responsive adjustments
  @media (max-width: 768px) {
    &__list {
      grid-auto-columns: 250px;
      padding: $space-3;
      height: 180px;
    }

    &__item {
      height: 70px;
      padding: $space-2;
    }

    &__button {
      &--prev,
      &--next {
        height: 35px;
        width: 35px;
        font-size: $font-size-base;
      }
    }
  }

  // Alternative single-row layout (can be applied with modifier class)
  &--single-row {
    .carousel__list {
      grid-template-rows: 1fr;
      height: 120px;
    }

    .carousel__item {
      height: 100px;
    }
  }

  // Alternative three-row layout (can be applied with modifier class)
  &--triple-row {
    .carousel__list {
      grid-template-rows: repeat(3, 1fr);
      height: 280px;
    }

    .carousel__item {
      height: 70px;
    }
  }

  // Tuning systems layout (2 rows with wider items)
  &--tuning-systems {
    .carousel__list {
      grid-template-rows: repeat(2, 1fr);
      grid-auto-columns: 430px;
      height: 200px;
    }

    .carousel__item {
      height: 80px;
    }
  }
}

// Tabs component - minimal border-only design
// Matches pitch class bar aesthetic for visual consistency
.tabs {
  display: flex;
  flex-wrap: wrap;
  gap: $space-2;
  margin-bottom: $space-2; // More separation from carousel
  position: relative;
  
  // Fixed height container prevents layout shift when switching between modes
  // Accommodates up to 2 rows of tabs (note mode = 1 row, jins mode = 2 rows)
  min-height: 64px;
  align-content: flex-start; // Align rows to top

  // RTL support
  [dir="rtl"] & {
    margin-left: 0;
    margin-right: $space-4;
  }

  &__tab {
    // Minimal filter button - clean border style matching pitch class bar
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: $space-2 $space-3;
    font-size: $font-size-xs;
    font-weight: $font-weight-normal;
    white-space: nowrap;
    
    // Clean minimal default state
    background: transparent;
    border: 1px solid rgba($border-secondary, 0.5);
    border-radius: $space-2;
    color: $text-secondary;
    
    // Interaction
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    text-decoration: none;
    position: relative;
    
    // Accessibility
    &:focus-visible {
      outline: 2px solid $primary;
      outline-offset: 2px;
      z-index: 3;
    }

    // RTL text alignment
    [dir="rtl"] & {
      text-align: right;
    }

    // Hover state - cyan hint matching carousel theme
    &:hover:not(&--active) {
      border-color: rgba($tertiary, 0.6);
      color: $text-primary;
      transform: translateY(-1px);
    }

    // Active state - strong cyan border like carousel items
    &--active {
      background: transparent;
      border: 2px solid $tertiary; // Thicker cyan border
      color: $text-primary;
      font-weight: $font-weight-medium;
      // Compensate padding for thicker border to maintain size
      padding: calc($space-2 - 1px) calc($space-3 - 1px);
      
      &:hover {
        background: transparent;
        border-color: $tertiary;
        color: $text-primary;
        transform: translateY(-1px);
      }
    }
  }

  // Count badge - subtle and integrated
  &__count {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: rgba($text-tertiary, 0.1);
    border: 1px solid rgba($text-tertiary, 0.15);
    color: $text-tertiary;
    border-radius: $space-2;
    padding: 2px 6px;
    font-size: 10px;
    font-weight: $font-weight-medium;
    margin-left: $space-1;
    min-width: 18px;
    transition: all 0.2s ease;

    // RTL support
    [dir="rtl"] & {
      margin-left: 0;
      margin-right: $space-1;
    }

    // Cyan tint in active button
    .tabs__tab--active & {
      background: rgba($tertiary, 0.15);
      border-color: rgba($tertiary, 0.3);
      color: $tertiary;
    }

    // Brighter on hover
    .tabs__tab:hover:not(.tabs__tab--active) & {
      background: rgba($text-secondary, 0.15);
      border-color: rgba($text-secondary, 0.2);
      color: $text-secondary;
    }
  }
}
